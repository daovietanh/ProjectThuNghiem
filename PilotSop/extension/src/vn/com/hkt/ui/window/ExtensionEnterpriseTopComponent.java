/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package vn.com.hkt.ui.window;

import java.io.IOException;
import java.util.Collection;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import org.openide.util.Lookup;
import org.openide.util.LookupEvent;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.cookies.SaveCookie;
import org.openide.util.LookupListener;
import org.openide.util.Utilities;
import org.openide.util.lookup.AbstractLookup;
import org.openide.util.lookup.ServiceProvider;
import vn.com.hkt.enterprise.ext.dao.EnterpriseExtBN;
import vn.com.hkt.enterprise.ext.entity.EnterpriseExt;
import vn.com.hkt.pilot.entities.Enterprise;
import vn.com.hkt.pilot.viewer.api.IEnterpriseCreator;
import vn.com.hkt.pilot.viewer.api.IEnterpriseExtCreator;
import vn.com.hkt.pilot.viewer.api.IEnterpriseExtViewer;
import vn.com.hkt.pilot.viewer.api.ResetCookie;
import vn.com.hkt.ui.panel.ExtensionEnterprisePanel;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//vn.com.hkt.ui.window//ExtensionEnterprise//EN",
autostore = false)
@TopComponent.Description(preferredID = "ExtensionEnterpriseTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "vn.com.hkt.ui.window.ExtensionEnterpriseTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_ExtensionEnterpriseAction",
preferredID = "ExtensionEnterpriseTopComponent")
@ServiceProvider(service = IEnterpriseExtCreator.class)
public final class ExtensionEnterpriseTopComponent extends TopComponent implements IEnterpriseExtCreator, LookupListener, SaveCookie, ResetCookie {

    private ExtensionEnterprisePanel enterprisePanel;
    private AbstractLookup lookup;
    private String idEnterprise;
    private String nameEnterprise;
    private Lookup.Result<Enterprise> resultbasic;
    private Lookup.Result<Enterprise> resultext;
     private Lookup.Result<String> resultStr = null;
    private IEnterpriseCreator enterpriseCreator;
    private IEnterpriseExtViewer enterpriseExtViewer;
    private EnterpriseExtBN enterpriseextdao = new EnterpriseExtBN();

    public ExtensionEnterpriseTopComponent() {
        initComponents();
        setName(NbBundle.getMessage(ExtensionEnterpriseTopComponent.class, "CTL_ExtensionEnterpriseTopComponent"));
        setToolTipText(NbBundle.getMessage(ExtensionEnterpriseTopComponent.class, "HINT_ExtensionEnterpriseTopComponent"));
        enterprisePanel = new ExtensionEnterprisePanel();
        enterpriseCreator = Lookup.getDefault().lookup(IEnterpriseCreator.class);
        enterpriseExtViewer = Lookup.getDefault().lookup(IEnterpriseExtViewer.class);
        resultbasic = enterpriseCreator.getEnterpriseLookup().lookupResult(Enterprise.class);
        if (enterpriseExtViewer != null) {
            resultext = enterpriseExtViewer.getEnterpriseLookup().lookupResult(Enterprise.class);
            resultext.addLookupListener(this);
        }

        resultbasic.addLookupListener(this);
         resultStr = Utilities.actionsGlobalContext().lookupResult(String.class);
        resultStr.addLookupListener(this);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
    }

    @Override
    public void componentClosed() {
        resultbasic.removeLookupListener(this);
        if(resultext!=null){
            resultext.removeLookupListener(this);
        }
        resultStr.removeLookupListener(this);
        reset();
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    public void update() {

        String diachi = enterprisePanel.getTableExtensionE().getValueAt(0, 1).toString().trim();
        String tell = enterprisePanel.getTableExtensionE().getValueAt(1, 1).toString().trim();
        String email = enterprisePanel.getTableExtensionE().getValueAt(2, 1).toString().trim();
        String fax = enterprisePanel.getTableExtensionE().getValueAt(1, 3).toString().trim();
        String web = enterprisePanel.getTableExtensionE().getValueAt(2, 3).toString().trim();

        EnterpriseExt bean = new EnterpriseExt(idEnterprise, nameEnterprise, diachi, tell, email, fax, web);
        if (idEnterprise!=null) {
            enterpriseextdao.updateEnterpriseExt(bean);
            //JOptionPane.showMessageDialog(null, "Saved ext for " + idEnterprise);
        }
        // JOptionPane.showMessageDialog(null, "Saved extension for " + this.idEnterprise);


    }

    public void reset() {
        idEnterprise = null;
        enterprisePanel.getTableExtensionE().setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{
                    {"Địa chỉ", " ", " ", " "},
                    {"Tell", " ", "Fax", " "},
                    {"Email", " ", "Web", " "}
                },
                new String[]{
                    "", "", "", ""
                }));
    }

    @Override
    public void resultChanged(LookupEvent le) {
        //JOptionPane.showMessageDialog(null, "Something changed from ext!");
        if (le.getSource() == resultbasic) {
            resultbasic = (Lookup.Result) le.getSource();
            Collection<? extends Enterprise> allEnterprise = resultbasic.allInstances();
            if (allEnterprise != null) {
                for (Enterprise bean : allEnterprise) {
                    idEnterprise = bean.getEnterpriseID();
                    nameEnterprise = bean.getEnterpriseName();
                }
            }
        }
        if (le.getSource() == resultext) {
            resultext = (Lookup.Result) le.getSource();
            Collection<? extends Enterprise> allEnterprise = resultext.allInstances();
            if (allEnterprise != null) {
                for (Enterprise bean : allEnterprise) {
                    idEnterprise = bean.getEnterpriseID();
                    nameEnterprise = bean.getEnterpriseName();
                    EnterpriseExt enterpriseExt = enterpriseextdao.getEnterpriseExtByID(idEnterprise);
                    if (enterpriseExt != null) {
                        enterprisePanel.getTableExtensionE().setValueAt(enterpriseExt.getEnterpriseAddress(), 0, 1);
                        enterprisePanel.getTableExtensionE().setValueAt(enterpriseExt.getEnterpriseTel(), 1, 1);
                        enterprisePanel.getTableExtensionE().setValueAt(enterpriseExt.getEnterpriseFax(), 1, 3);
                        enterprisePanel.getTableExtensionE().setValueAt(enterpriseExt.getEnterpriseEmail(), 2, 1);
                        enterprisePanel.getTableExtensionE().setValueAt(enterpriseExt.getEnterpriseWeb(), 2, 3);
                        enterprisePanel.getTableExtensionE().setEnabled(false);
                    } else {
                        enterprisePanel.getTableExtensionE().setValueAt("", 0, 1);
                        enterprisePanel.getTableExtensionE().setValueAt("", 1, 1);
                        enterprisePanel.getTableExtensionE().setValueAt("", 1, 3);
                        enterprisePanel.getTableExtensionE().setValueAt("", 2, 1);
                        enterprisePanel.getTableExtensionE().setValueAt("", 2, 3);
                        enterprisePanel.getTableExtensionE().setEnabled(false);
                    }
                }
            }
        }
         if (le.getSource() == resultStr) {
            resultStr = (Lookup.Result) le.getSource();
            Collection<? extends String> col = resultStr.allInstances();
            if (!col.isEmpty()) {
                enterprisePanel.getTableExtensionE().setEnabled(true);
            }

        }

    }

    @Override
    public void save() throws IOException {
        update();
    }

    @Override
    public JPanel getEnterpriseExtCreator() {
        return this.enterprisePanel;
    }

    @Override
    public Lookup getEnterpriseExtLookup() {
        return lookup;
    }

    @Override
    public void resetCookie() throws IOException {
        reset();
    }
}
